From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Tue, 11 Sep 2018 20:57:53 -0400
Subject: [PATCH 07/12] added a simple caesar cipher that uses arbitrary file
 descriptors

---
 ipc/tests/IpcCat.pl | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/ipc/tests/IpcCat.pl b/ipc/tests/IpcCat.pl
index d233392..c7314fd 100755
--- a/ipc/tests/IpcCat.pl
+++ b/ipc/tests/IpcCat.pl
@@ -9,7 +9,7 @@
 #  Helper tool to read or write data to/from stdin/stdout
 #
 #  Usage:
-#  IpcCat {write|read|dump|getenv|quick} arg
+#  IpcCat {write|read|dump|getenv|caesar|quick} [arg [arg2]]
 #
 #  Parameters:
 #    write:  read from stdin and write to file <arg>
@@ -17,6 +17,7 @@
 #    dump:   read from stdin; write to stdout
 #    getenv: print value of environment variable <arg>
 #    quick:  print Hello and exit
+#    caesar: do a caesar cipher between FDs arg and arg2
 #
 #  Exit codes:
 #    0:    success
@@ -57,6 +58,17 @@ elsif ($ARGV[0] =~ /^dump$/i) {
   print $buf;
   print STDERR sprintf("Dumped %d bytes\n", length($buf));
 }
+elsif ($ARGV[0] =~ /^caesar$/i) {
+  my ($infd, $outfd) = (int($ARGV[1]), int($ARGV[2]));
+  print STDERR "Starting caesar cipher transfer between file descriptors $infd and $outfd\n";
+  open(OF, ">&".$outfd) or die $!;
+
+  my $buf = readFile("<&".$infd);
+  $buf =~ tr/a-zA-Z/n-za-mN-ZA-M/;
+  print OF $buf;
+  close(OF);
+  print STDERR sprintf("Dumped %d bytes\n", length($buf));
+}
 elsif ($ARGV[0] =~ /^read$/i) {
   print STDERR "Starting read\n";
 
