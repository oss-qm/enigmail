From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Fri, 8 Nov 2019 19:41:52 -0500
Subject: convert buildlist.py to unix-style line-endings (no functional
 change)

---
 util/buildlist.py | 84 +++++++++++++++++++++++++++----------------------------
 1 file changed, 42 insertions(+), 42 deletions(-)

diff --git a/util/buildlist.py b/util/buildlist.py
index 20900ad..d430340 100644
--- a/util/buildlist.py
+++ b/util/buildlist.py
@@ -1,42 +1,42 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at https://mozilla.org/MPL/2.0/.
-
-'''A generic script to add entries to a file 
-if the entry does not already exist.
-
-Usage: buildlist.py <filename> <entry> [<entry> ...]
-'''
-from __future__ import print_function
-
-import sys
-import os
-from utils import lockFile
-
-def addEntriesToListFile(listFile, entries):
-  """Given a file |listFile| containing one entry per line,
-  add each entry in |entries| to the file, unless it is already
-  present."""
-  lock = lockFile(listFile + ".lck")
-  try:
-    if os.path.exists(listFile):
-      f = open(listFile)
-      existing = set(x.strip() for x in f.readlines())
-      f.close()
-    else:
-      existing = set()
-    f = open(listFile, 'a')
-    for e in entries:
-      if e not in existing:
-        f.write("{0}\n".format(e))
-        existing.add(e)
-    f.close()
-  finally:
-    lock = None
-
-if __name__ == '__main__':
-  if len(sys.argv) < 3:
-    print("Usage: buildlist.py <list file> <entry> [<entry> ...]",
-          file=sys.stderr)
-    sys.exit(1)
-  addEntriesToListFile(sys.argv[1], sys.argv[2:])
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at https://mozilla.org/MPL/2.0/.
+
+'''A generic script to add entries to a file 
+if the entry does not already exist.
+
+Usage: buildlist.py <filename> <entry> [<entry> ...]
+'''
+from __future__ import print_function
+
+import sys
+import os
+from utils import lockFile
+
+def addEntriesToListFile(listFile, entries):
+  """Given a file |listFile| containing one entry per line,
+  add each entry in |entries| to the file, unless it is already
+  present."""
+  lock = lockFile(listFile + ".lck")
+  try:
+    if os.path.exists(listFile):
+      f = open(listFile)
+      existing = set(x.strip() for x in f.readlines())
+      f.close()
+    else:
+      existing = set()
+    f = open(listFile, 'a')
+    for e in entries:
+      if e not in existing:
+        f.write("{0}\n".format(e))
+        existing.add(e)
+    f.close()
+  finally:
+    lock = None
+
+if __name__ == '__main__':
+  if len(sys.argv) < 3:
+    print("Usage: buildlist.py <list file> <entry> [<entry> ...]",
+          file=sys.stderr)
+    sys.exit(1)
+  addEntriesToListFile(sys.argv[1], sys.argv[2:])
