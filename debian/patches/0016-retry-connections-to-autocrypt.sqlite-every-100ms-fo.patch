From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Tue, 3 Jul 2018 19:14:14 -0400
Subject: retry connections to autocrypt.sqlite every 100ms for up to 10s

on the debian continuous integration infrastructure, we were seeing
failures in the autocrypt test, which appear to be an
NS_ERROR_STORAGE_BUSY result:

*** Executing sub-test 'autocrypt-test.js' ***
2018-07-02 13:59:32.928 [DEBUG] autocrypt.jsm: getOpenPGPKeyForEmail: could not open database [Error:
Could not open connection to /tmp/autopkgtest-lxc.nogrphwa/downtmp/build.6Ql/src/test-profile/enigmail.sqlite: 2153971713]
AssertionError: "getOpenPGPKeyForEmail1 error Error: Could not open connection to /tmp/autopkgtest-lxc.nogrphwa/downtmp/build.6Ql/src/test-profi == 1 - JS frame :: resource://jsunit/jsunit-main.jsm -> file:///tmp/autopkgtest-lxc.nogrphwa/downtmp/build.6Ql/src/package/tests/autocrypt-test.js :: processHeader/< :: line 161

This is not a principled fix; instead it is a workaround that just
tries again every little while.

see id:87r2klo4hv.fsf@fifthhorseman.net and subsequent discussion on
the enigmail-users mailing list for more details.
---
 package/autocrypt.jsm | 55 +++++++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 47 insertions(+), 8 deletions(-)

diff --git a/package/autocrypt.jsm b/package/autocrypt.jsm
index 1eb6cdc..51f3f7c 100644
--- a/package/autocrypt.jsm
+++ b/package/autocrypt.jsm
@@ -175,10 +175,7 @@ var EnigmailAutocrypt = {
 
       let conn;
 
-      Sqlite.openConnection({
-        path: "enigmail.sqlite",
-        sharedMemoryCache: false
-      }).then(
+      _openAutocryptDb().then(
         function onConnection(connection) {
           conn = connection;
           return checkDatabaseStructure(conn);
@@ -291,10 +288,7 @@ var EnigmailAutocrypt = {
     let conn;
 
     return new Promise((resolve, reject) => {
-      Sqlite.openConnection({
-        path: "enigmail.sqlite",
-        sharedMemoryCache: false
-      }).then(
+      _openAutocryptDb().then(
         function onConnection(connection) {
           conn = connection;
           return checkDatabaseStructure(conn);
@@ -615,6 +609,51 @@ var EnigmailAutocrypt = {
   }
 };
 
+/**
+ * use a promise to open the autocrypt database.
+ *
+ * it's possible that there will be an NS_ERROR_STORAGE_BUSY
+ * so we're willing to retry for a little while.
+ *
+ * @param resolve: function to call when promise succeeds
+ * @param reject:  function to call when promise fails
+ * @param waitms:  Integer - number of milliseconds to wait before trying again in case of NS_ERROR_STORAGE_BUSY
+ * @param maxtime: Integer - unix epoch (in milliseconds) of the point at which we should give up.
+ */
+function  _openAutocryptDb_inner(resolve, reject, waitms, maxtime) {
+  EnigmailLog.DEBUG("autocrypt.jsm: _openAutocryptDb_inner()\n");
+  Sqlite.openConnection({
+    path: "enigmail.sqlite",
+    sharedMemoryCache: false
+  }).
+    then(connection => {
+      resolve(connection);
+    }).
+    catch(error => {
+      let now = Date.now();
+      if (now > maxtime) {
+        reject(error);
+        return;
+      }
+      EnigmailTimer.setTimeout(function() {
+        _openAutocryptDb_inner(resolve, reject, waitms, maxtime);
+      }, waitms);
+    });
+};
+
+/**
+ * Provide an sqlite conection object asynchronously, retrying if needed
+ *
+ * @return Promise (connection) - the Sqlite database object
+ */
+function _openAutocryptDb() {
+  EnigmailLog.DEBUG("autocrypt.jsm: _openAutocryptDb()\n");
+  return new Promise((resolve, reject) => {
+    _openAutocryptDb_inner(resolve, reject, 100, Date.now() + 10000);
+  });
+};
+  
+
 /**
  * Ensure that the database structure matches the latest version
  * (table is available)
